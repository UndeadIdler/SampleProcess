using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;

using WebApp.Components;

public partial class Sample_AccessReport : System.Web.UI.Page
{
    private string strSelectedId//所选择操作列记录对应的id
    {
        get { return (string)ViewState["strSelectedId"]; }
        set { ViewState["strSelectedId"] = value; }
    }
    private string strSampleId//所选择操作列记录对应的id
    {
        get { return (string)ViewState["strSampleId"]; }
        set { ViewState["strSampleId"] = value; }
    }
    private string strReportId//所选择操作列记录对应的id
    {
        get { return (string)ViewState["strReportId"]; }
        set { ViewState["strReportId"] = value; }
    }
    private string strReportName//所选择操作列记录对应的id
    {
        get { return (string)ViewState["strReportName"]; }
        set { ViewState["strReportName"] = value; }
    }
    private string strAnalysisId//所选择操作列记录对应的id
    {
        get { return (string)ViewState["strAnalysisId"]; }
        set { ViewState["strAnalysisId"] = value; }
    }
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            //txt_SampleType.Attributes.Add("OnFocus", "javascript:WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss'})");
            txt_AccessTime.Attributes.Add("OnFocus", "javascript:WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss'})");//onclick="SetDate(this,'yyyy-MM-dd hh:mm:ss')" readonly="readonly" 
            txt_QueryTime.Attributes.Add("OnFocus", "javascript:WdatePicker({dateFmt:'yyyy-MM-dd'})");
            txt_SampleTime.Attributes.Add("OnFocus", "javascript:WdatePicker({dateFmt:'yyyy-MM-dd HH:mm:ss'})");
           // txt_QueryTime.Text = DateTime.Now.Date.ToString("yyyy-MM-dd");
            Query();

            grdvw_List.Caption = "<FONT style='WIDTH: 102.16%; COLOR:#2292DD;font-size:14pt; LINE-HEIGHT: 150%; FONT-FAMILY: 楷体_GB2312; HEIGHT: 35px'><b>样品接收</b></font>"; 
        }
    }
 
  

    private void Query()
    {
        string strSql = "select t_M_ReporInfo.id,CreateDate 时间,t_M_ReporInfo.ItemType,ItemName 项目类型,ReportName 报告标识,ClientID,ClientName 委托单位,urgent 备注 from t_M_ReporInfo,t_M_ItemInfo,t_M_ClientInfo where t_M_ClientInfo.id=ClientID and t_M_ReporInfo.ItemType=t_M_ItemInfo.ItemID and (StatusID=0 or StatusID=1) order by t_M_ReporInfo.urgent desc, t_M_ReporInfo.id desc ";

        DataSet ds = new MyDataOp(strSql).CreateDataSet();

        if (ds.Tables[0].Rows.Count == 0)
        {
            //没有记录仍保留表头
            ds.Tables[0].Rows.Add(ds.Tables[0].NewRow());
            grdvw_List.DataSource = ds;
            grdvw_List.DataBind();
            int intColumnCount = grdvw_List.Rows[0].Cells.Count;
            grdvw_List.Rows[0].Cells.Clear();
            grdvw_List.Rows[0].Cells.Add(new TableCell());
            grdvw_List.Rows[0].Cells[0].ColumnSpan = intColumnCount;
        }
        else
        {
            grdvw_List.DataSource = ds;
            grdvw_List.DataBind();
        } 
    }
    
    #region GridView相关事件响应函数
    protected void grdvw_List_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        grdvw_List.PageIndex = e.NewPageIndex;
        Query();
    }
    protected void grdvw_List_RowEditing(object sender, GridViewEditEventArgs e)
    {
        txt_ReportID.Text = grdvw_List.Rows[e.NewEditIndex].Cells[5].Text.Trim();//报告标识
        strReportName = grdvw_List.Rows[e.NewEditIndex].Cells[5].Text.Trim();
        strReportId = grdvw_List.Rows[e.NewEditIndex].Cells[1].Text.Trim();
        txt_ReportID.ReadOnly = true;
        txt_CreateDate.ReadOnly = true;
        lbl_Type.Text = "样品列表";

        txt_CreateDate.Text = grdvw_List.Rows[e.NewEditIndex].Cells[2].Text.Trim();//报告创建日期
        ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "", "showAddEditAnalysis();", true);
        txt_itemname.Text = grdvw_List.Rows[e.NewEditIndex].Cells[4].Text.Trim();
        txt_itemname.ReadOnly = true;
        txt_Client.Text = grdvw_List.Rows[e.NewEditIndex].Cells[7].Text.Trim();
        txt_Client.ReadOnly = true;

        ReportSelectQuery();
        //lbl_Type.Text = "编辑";
        //txt_AccessTime.Text = grdvw_List.Rows[e.NewEditIndex].Cells[2].Text;
        //string clientid = grdvw_List.Rows[e.NewEditIndex].Cells[6].Text;
        //txt_AccessTime.ReadOnly = true;
        //strSelectedId = grdvw_List.Rows[e.NewEditIndex].Cells[1].Text;
        //txt_ReportName.Text = grdvw_List.Rows[e.NewEditIndex].Cells[5].Text;
        //strReportName = grdvw_List.Rows[e.NewEditIndex].Cells[5].Text;
       
        //ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "", "showAddEdit();", true);
        //ListItem choose = new ListItem("请选择", "-1");
        //DropList_ItemList.Text = grdvw_List.Rows[e.NewEditIndex].Cells[4].Text;
        //drop_urgent.Text = "";
        //if (grdvw_List.Rows[e.NewEditIndex].Cells[8].Text != "&nbsp;")
        //drop_urgent.Text = grdvw_List.Rows[e.NewEditIndex].Cells[8].Text;
      
        //MyStaVoid.BindList("ClientName", "id", "select * from t_M_ClientInfo order by id", DropList_client);

        //DropList_client.Items.Add(choose);
        //DropList_client.Items.FindByValue(clientid).Selected = true;
       
        //ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "showAddEdit();hiddenDetailAnalysisAdd();", true);
    }
    protected void grdvw_List_RowCreated(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.Header)
        {

            TableCell headerDetail = new TableCell();
            headerDetail.Text = "编辑";
            headerDetail.BackColor = System.Drawing.Color.FromArgb(227, 239, 255);
            headerDetail.Width = 60;
            e.Row.Cells.Add(headerDetail);

            TableCell headerset = new TableCell();
            headerset.Text = "样品列表";
            headerset.BackColor = System.Drawing.Color.FromArgb(227, 239, 255);
            headerset.Width = 60;
            e.Row.Cells.Add(headerset);

            TableCell headerDel = new TableCell();
            headerDel.Text = "删除";
            headerDel.BackColor = System.Drawing.Color.FromArgb(227, 239, 255);
            headerDel.Width = 30;
            e.Row.Cells.Add(headerDel);
        }
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            //鼠标移动到每项时颜色交替效果
            e.Row.Attributes.Add("OnMouseOut", "this.style.backgroundColor='';");
            e.Row.Attributes.Add("OnMouseOver", "this.style.backgroundColor='#00ffee'");
            int id = e.Row.RowIndex + 1;

            e.Row.Cells[0].Text = id.ToString();

            //手动添加详细和删除按钮
            TableCell tabcDetail = new TableCell();
            tabcDetail.Width = 60;
            tabcDetail.Style.Add("text-align", "center");
            ImageButton ibtnDetail = new ImageButton();
            ibtnDetail.ImageUrl = "~/images/Detail.gif";
            ibtnDetail.CommandName = "Edit";
            tabcDetail.Controls.Add(ibtnDetail);
            e.Row.Cells.Add(tabcDetail);

            TableCell MenuSet = new TableCell();
            MenuSet.Width = 60;
            MenuSet.Style.Add("text-align", "center");
            ImageButton btMenuSet = new ImageButton();
            btMenuSet.ImageUrl = "~/images/Detail.gif";
            btMenuSet.CommandName = "Select";
            //btMenuSet.Click+=new ImageClickEventHandler(btMenuSet_Click);
            MenuSet.Controls.Add(btMenuSet);
            e.Row.Cells.Add(MenuSet);

            TableCell tabcDel = new TableCell();
            tabcDel.Width = 30;
            tabcDel.Style.Add("text-align", "center");
            ImageButton ibtnDel = new ImageButton();
            ibtnDel.ImageUrl = "~/images/Delete.gif";
            ibtnDel.CommandName = "Delete";
            ibtnDel.Attributes.Add("OnClick", "if(!confirm('确定删除该项吗？')) return false;");
            if (Int16.Parse(Request.Cookies["Cookies"].Values["u_level"].ToString()) > 2 || Request.Cookies["Cookies"].Values["u_purview"].ToString().Substring(0, 1) == "0")
            {
                ibtnDel.Enabled = false;
            }
            tabcDel.Controls.Add(ibtnDel);
            e.Row.Cells.Add(tabcDel);
        }
        if (e.Row.RowType != DataControlRowType.Pager)
        {
            //绑定数据后，隐藏4,5,6,7列 
            e.Row.Cells[1].Visible = false;
            e.Row.Cells[3].Visible = false;
            e.Row.Cells[6].Visible = false;
            //e.Row.Cells[8].Visible = false;
            
        }
    }
    protected void grdvw_List_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        strReportId = grdvw_List.Rows[e.RowIndex].Cells[1].Text;
        string strSql;
        string[] deletelist = new string[2];
        strSql = "DELETE FROM t_M_ReporInfo WHERE id= '" + strReportId + "'";
        //待修改，改项目删除后，相应要修改的信息

        //deletelist.SetValue("delete from t_操作员信息 where 所属角色id=(select id from t_角色信息 where 级别id='" + strSelectedId + "')", 0);
        //deletelist.SetValue("delete from t_角色菜单关系表 where 角色id=(select id from t_角色信息 where 级别id='" + strSelectedId + "')", 1);
        // deletelist.SetValue("DELETE FROM t_角色信息 WHERE 级别id = '" + strSelectedId + "'",2);

        deletelist.SetValue(strSql, 0);
        MyDataOp mdo = new MyDataOp(strSql);
        if (mdo.DoTran(1,deletelist))
        {
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "", "alert('数据删除成功!')", true);
            Log.SaveLog("样品接收中删除样品信息" + txt_ReportName.Text.Trim() + "（" + strSelectedId + "）成功！！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
        }
        else
        {
            Log.SaveLog("样品接收中删除样品信息" + txt_ReportName.Text.Trim() + "（" + strSelectedId + "）失败！！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "", "alert('数据删除失败！')", true);
        }
        Query();
    }
    #endregion

    #region 其它函数

    private string VerifySample()
    {
        string strErrorInfo = "";
        if (txt_SampleID.Text.Trim() == "")
        {
            strErrorInfo += "样品编码不能为空！\\n";
        }

        else if (DropList_SampleType.Text == "")
            strErrorInfo += "样品类型不能为空！\\n";

        //else if (DropList_client.SelectedValue == "-1")
        //    strErrorInfo += "请选择委托单位！\\n";
        else if (txt_report.Text.Trim() == "")
        {
            strErrorInfo += "请输入报告编号！\\n";
            //if (lbl_Type.Text == "添加")
            //{

            //    string str = "select * from t_M_SampleInfor where SampleID='" + txt_SampleID.Text.Trim() + "'";
            //    DataSet ds = new MyDataOp(str).CreateDataSet();
            //    if (ds.Tables[0].Rows.Count > 0)
            //        strErrorInfo = "样品编号不能重复!";
            //    else
            //        strErrorInfo = "";
            //}

        }
        return strErrorInfo;
    }
    private string Verify()
    {
        string strErrorInfo = "";
        if (txt_ReportName.Text.Trim() == "")
        {
            strErrorInfo += "报告标识不能为空！\\n";
        }

        else if (DropList_ItemList.Text == "")
            strErrorInfo += "项目类型不能为空！\\n";

        else if (DropList_client.SelectedValue == "-1")
            strErrorInfo += "请选择委托单位！\\n";
        //else if (txt_ReportName.Text.Trim()=="")
        //{
        //    strErrorInfo += "请输入报告编号！\\n";
        //    //if (lbl_Type.Text == "添加")
        //    //{

        //    //    string str = "select * from t_M_SampleInfor where SampleID='" + txt_SampleID.Text.Trim() + "'";
        //    //    DataSet ds = new MyDataOp(str).CreateDataSet();
        //    //    if (ds.Tables[0].Rows.Count > 0)
        //    //        strErrorInfo = "样品编号不能重复!";
        //    //    else
        //    //        strErrorInfo = "";
        //    //}
            
        //}
        return strErrorInfo;
    }
    private string VerifyItem()
    {
        string strErrorInfo = "";
        //if (DropList_AnalysisItem.Text=="")
        //{
        //    strErrorInfo += "请选择分析项目！\\n";
        //}
        //else if (txt_detailNum.Text == "")//TBD数字的判断
        //{
        //    strErrorInfo += "请填写正确的数量！\\n";
        //}
        
        return strErrorInfo;
    }
    
   
    #endregion

    
    
    
    protected void btn_OK_Click(object sender, EventArgs e)
    {
        string strFlag = Verify();//需要添加检查样品编号的有效性

        string clientname = DropList_client.SelectedValue.ToString();
        if (strFlag != "")
        {
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "alert('" + strFlag + "');", true);
            return;
           

        }
        else
        {
            int num = getnum(txt_ReportName.Text);
            if (num == 0)
            {
                ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "alert('样品编号不符合规定！');", true);
                return;
            }
            else
            {
                #region 添加新纪录
                if (lbl_Type.Text == "添加")
                {
                    string strSqltmp = "";

                        DataSet myDR2 = new MyDataOp("select ItemID from t_M_ItemInfo where ItemName='" + DropList_ItemList.Text.Trim() + "'").CreateDataSet();
                        if (myDR2.Tables[0].Rows.Count > 0)
                        {
                           
                            string itemname = myDR2.Tables[0].Rows[0]["ItemID"].ToString();
                           
                          
                            strSqltmp = @"insert into t_M_ReporInfo
                    (CreateDate,ItemType,UserID,ClientID,ReportName,urgent)  
                    values('" + txt_AccessTime.Text.Trim() + "','" + itemname + "','" + Request.Cookies["Cookies"].Values["u_id"].ToString() + "','" + clientname + "','" + txt_ReportName.Text.Trim() + "','" + drop_urgent.Text+ "')";


                            MyDataOp mdo = new MyDataOp(strSqltmp);
                            bool blSuccess = mdo.ExecuteCommand();
                            if (blSuccess == true)
                            {
                                Log.SaveLog("创建样品原单添加成功！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
                                ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "clickAddSuccess", "alert('数据添加成功！')", true);
                               

                            }
                            else
                            {
                                Log.SaveLog("创建样品原单添加失败！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
                                ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "clickAddFail", "alert('数据添加失败！')", true);
                                
                            }
                           
                        }
                        else
                        {
                            Log.SaveLog("创建样品原单添加不存在该项目类型！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
                            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "clickAddAlarm", "alert('不存在该项目类型，请联系样品管理员！')", true);

                        }
                   
                }
                #endregion

                #region 编辑记录
                else if (lbl_Type.Text == "编辑")
                {
                   

                        DataSet myDR2 = new MyDataOp("select ItemID from t_M_ItemInfo where ItemName='" + DropList_ItemList.Text.Trim() + "'").CreateDataSet();
                        if (myDR2.Tables[0].Rows.Count > 0)
                        {
                            string itemname = myDR2.Tables[0].Rows[0]["ItemID"].ToString();
                           

                            string strSql = @"update t_M_ReporInfo set ReportName='" + txt_ReportName.Text.Trim() +
                                                    "',ItemType='" + itemname +
                                                     "',ClientID='" + clientname +
                                                     "',urgent='" + drop_urgent.Text +
                                            "' where id='" + strSelectedId + "'";
                            string[] arr = new string[2];
                            arr.SetValue(strSql, 0);

                          
                            MyDataOp mdo = new MyDataOp(strSql);
                            bool blSuccess = mdo.DoTran(1, arr);
                            if (blSuccess == true)
                            {
                                ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "clickEditSuccess", "hiddenDetail();window.setTimeout(\"alert('数据编辑成功！')\",0);", true);
                                Log.SaveLog("样品接收编辑样品" + strSampleId + "（" + strSelectedId + "）成功！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
                            }
                            else
                            {
                                ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "clickEditFail", "hiddenDetail();alert('数据编辑失败！')", true);
                                Log.SaveLog("样品接收编辑样品" + strSampleId + "（" + strSelectedId + "）失败！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
                            }
                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "clickEditAlarm", "hiddenDetail();alert('不存在该项目类型，请联系样品管理员！');", true);
                            Log.SaveLog("样品接收编辑样品" + strSampleId + "（" + strSelectedId + "）不存在该项目类型！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);

                        }
                    
                }

                #endregion

            }
            Query();
        }
    }

  
    protected void btn_Cancel_Click(object sender, EventArgs e)
    {
        ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "hiddenDetail();", true);
        txt_ReportName.Text = "";
        DropList_ItemList.Text = "";
        //DropList_SampleType.Text= "";
        //DropList_AnalysisMainItem.SelectedValue = "-1";
        Query();
    }

   
   
    protected void btn_Add_Click(object sender, EventArgs e)
    {
        lbl_Type.Text = "添加";
        btn_OK.Text = "确定";
        txt_ReportName.Text = "";
       
        DropList_ItemList.Text = "";
        //DropList_SampleType.Text = "";
        //DropList_client.Text = "";
        MyStaVoid.BindList("ClientName", "id", "select * from t_M_ClientInfo order by id", DropList_client);
        ListItem choose = new ListItem("请选择", "-1");
        DropList_client.Items.Add(choose);
        DropList_client.Items.FindByValue("-1").Selected = true;
        ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "showAddEdit();hiddenDetailAnalysis();", true);
        drop_urgent.Text = "";

        Query();
    }
    protected void btn_AddSample_Click(object sender, EventArgs e)
    {
        Label2.Text  = "添加样品";
        //DropList_ItemList.Text = "";
        DropList_SampleType.Text = "";
        txt_SampleID.Text = "";
        //txt_report.Text = "";
        txt_SampleTime.Text = "";
       //txt_report.Text = strReportName;
        MyStaVoid.BindList("ReportName", "id", "select * from t_M_ReporInfo where StatusID<2 order by id", txt_report);
        txt_report.Items.FindByValue(strReportId).Selected = true;
        //txt_ReportName.Text = "";
        //DropList_client.Text = "";
        //MyStaVoid.BindList("ClientName", "id", "select * from t_M_ClientInfo order by id", DropList_client);
        //ListItem choose = new ListItem("请选择", "-1");
        //DropList_client.Items.Add(choose);
        //DropList_client.Items.FindByValue("-1").Selected = true;
        ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "showAddEditAnalysisAdd();", true);


        ReportSelectQuery();
    }
    protected void grdvw_ReportDetail_RowSelecting(object sender, GridViewSelectEventArgs e)
    {
        Label2.Text = "编辑样品";
        txt_SampleID.Text = grdvw_ReportDetail.Rows[e.NewSelectedIndex].Cells[6].Text.Trim();
       // DropList_ItemList.Text = grdvw_ReportDetail.Rows[e.NewSelectedIndex].Cells[5].Text.Trim();
        DropList_SampleType.Text = grdvw_ReportDetail.Rows[e.NewSelectedIndex].Cells[8].Text.Trim();
        strSelectedId = grdvw_ReportDetail.Rows[e.NewSelectedIndex].Cells[2].Text.Trim();
       // txt_report.Text = grdvw_ReportDetail.Rows[e.NewSelectedIndex].Cells[1].Text.Trim();
        //txt_report.Enabled = false;
        strReportId = grdvw_ReportDetail.Rows[e.NewSelectedIndex].Cells[14].Text.Trim();
        strSampleId = grdvw_ReportDetail.Rows[e.NewSelectedIndex].Cells[2].Text.Trim();
        txt_SampleTime.Text = grdvw_ReportDetail.Rows[e.NewSelectedIndex].Cells[3].Text.Trim();
        ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "showAddEditAnalysisAdd();", true);
        
        MyStaVoid.BindList("ReportName", "id", "select * from t_M_ReporInfo where StatusID<2 order by id", txt_report);
        txt_report.Items.FindByValue(strReportId).Selected = true;
    }
    

    protected void grdvw_List_RowSelecting(object sender, GridViewSelectEventArgs e)
    {
       

       // txt_ReportID.Text = grdvw_List.Rows[e.NewSelectedIndex].Cells[5].Text.Trim();//报告标识
       // strReportName = grdvw_List.Rows[e.NewSelectedIndex].Cells[5].Text.Trim();
       // strReportId = grdvw_List.Rows[e.NewSelectedIndex].Cells[1].Text.Trim();
       // txt_ReportID.ReadOnly = true;
       // txt_CreateDate.ReadOnly = true;
       // lbl_Type.Text = "样品列表";
      
       //txt_CreateDate.Text = grdvw_List.Rows[e.NewSelectedIndex].Cells[2].Text.Trim();//报告创建日期
       // ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "", "showAddEditAnalysis();", true);
       // txt_itemname.Text = grdvw_List.Rows[e.NewSelectedIndex].Cells[4].Text.Trim();
       // txt_itemname.ReadOnly = true;
       // txt_Client.Text = grdvw_List.Rows[e.NewSelectedIndex].Cells[7].Text.Trim();
       // txt_Client.ReadOnly = true;
       
       // ReportSelectQuery();


        lbl_Type.Text = "编辑";
        txt_AccessTime.Text = grdvw_List.Rows[e.NewSelectedIndex].Cells[2].Text;
        string clientid = grdvw_List.Rows[e.NewSelectedIndex].Cells[6].Text;
        txt_AccessTime.ReadOnly = true;
        strSelectedId = grdvw_List.Rows[e.NewSelectedIndex].Cells[1].Text;
        txt_ReportName.Text = grdvw_List.Rows[e.NewSelectedIndex].Cells[5].Text;
        strReportName = grdvw_List.Rows[e.NewSelectedIndex].Cells[5].Text;

        ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "showAddEdit();hiddenDetailAnalysisAdd();", true);

        ListItem choose = new ListItem("请选择", "-1");
        DropList_ItemList.Text = grdvw_List.Rows[e.NewSelectedIndex].Cells[4].Text;
        drop_urgent.Text = "";
        if (grdvw_List.Rows[e.NewSelectedIndex].Cells[8].Text != "&nbsp;")
            drop_urgent.Text = grdvw_List.Rows[e.NewSelectedIndex].Cells[8].Text;

        MyStaVoid.BindList("ClientName", "id", "select * from t_M_ClientInfo order by id", DropList_client);

        DropList_client.Items.Add(choose);
        DropList_client.Items.FindByValue(clientid).Selected = true;



    }
    protected void grdvw_ReportDetail_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        grdvw_ReportDetail.PageIndex = e.NewPageIndex;
        ReportSelectQuery();
    }
    

    protected void grdvw_ReportDetail_RowCreated(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.Header)
        {



            TableCell headerset = new TableCell();
            headerset.Text = "编辑";
            headerset.BackColor = System.Drawing.Color.FromArgb(227, 239, 255);
            headerset.Width = 60;
            e.Row.Cells.Add(headerset);

            //TableCell headerDetail = new TableCell();
            //headerDetail.Text = "报告上传";
            //headerDetail.BackColor = System.Drawing.Color.FromArgb(227, 239, 255);
            //headerDetail.Width = 60;
            //e.Row.Cells.Add(headerDetail);
            TableCell headerDel = new TableCell();
            headerDel.Text = "删除";
            headerDel.BackColor = System.Drawing.Color.FromArgb(227, 239, 255);
            headerDel.Width = 30;
            e.Row.Cells.Add(headerDel);
        }
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            //鼠标移动到每项时颜色交替效果
            e.Row.Attributes.Add("OnMouseOut", "this.style.backgroundColor='';");
            e.Row.Attributes.Add("OnMouseOver", "this.style.backgroundColor='#00ffee'");
            int id = e.Row.RowIndex + 1;

            e.Row.Cells[0].Text = id.ToString();

            //手动添加详细和删除按钮
            TableCell tabcDetail = new TableCell();
            tabcDetail.Width = 60;
            tabcDetail.Style.Add("text-align", "center");
            ImageButton ibtnDetail = new ImageButton();
            ibtnDetail.ImageUrl = "~/images/Detail.gif";
            ibtnDetail.CommandName = "Select";
            tabcDetail.Controls.Add(ibtnDetail);
            e.Row.Cells.Add(tabcDetail);
            TableCell tabcDel = new TableCell();
            tabcDel.Width = 30;
            tabcDel.Style.Add("text-align", "center");
            ImageButton ibtnDel = new ImageButton();
            ibtnDel.ImageUrl = "~/images/Delete.gif";
            ibtnDel.CommandName = "Delete";
            ibtnDel.Attributes.Add("OnClick", "if(!confirm('确定删除该项吗？')) return false;");
            if (Int16.Parse(Request.Cookies["Cookies"].Values["u_level"].ToString()) > 2 || Request.Cookies["Cookies"].Values["u_purview"].ToString().Substring(0, 1) == "0")
            {
                ibtnDel.Enabled = false;
            }
            tabcDel.Controls.Add(ibtnDel);
            e.Row.Cells.Add(tabcDel);


        }
        if (e.Row.RowType != DataControlRowType.Pager)
        {
            //绑定数据后，隐藏4,5,6,7列 
            e.Row.Cells[2].Visible = false;
            e.Row.Cells[4].Visible = false;
            e.Row.Cells[7].Visible = false;
            e.Row.Cells[9].Visible = false;

            //e.Row.Cells[11].Visible = false;
            e.Row.Cells[13].Visible = false;
            e.Row.Cells[14].Visible = false;
        }
    }
    protected void btn_CancelReport_Click(object sender, EventArgs e)
    {
        ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "hiddenDetailAnalysis();", true);
        Query();
        
    }
    protected void grdvw_ReportDetail_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {

        strSelectedId = grdvw_ReportDetail.Rows[e.RowIndex].Cells[2].Text;
        string strSql;
        string[] deletelist = new string[2];
        strSql = "DELETE FROM t_M_SampleInfor WHERE id= '" + strSelectedId + "'";
        //待修改，改项目删除后，相应要修改的信息

        //deletelist.SetValue("delete from t_操作员信息 where 所属角色id=(select id from t_角色信息 where 级别id='" + strSelectedId + "')", 0);
        //deletelist.SetValue("delete from t_角色菜单关系表 where 角色id=(select id from t_角色信息 where 级别id='" + strSelectedId + "')", 1);
        // deletelist.SetValue("DELETE FROM t_角色信息 WHERE 级别id = '" + strSelectedId + "'",2);

        deletelist.SetValue(strSql, 0);
        MyDataOp mdo = new MyDataOp(strSql);
        if (mdo.DoTran(1,deletelist))
        {
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "", "alert('数据删除成功!')", true);
            Log.SaveLog("样品接收中删除样品信息" + txt_SampleID.Text.Trim() + "（" + strSelectedId + "）成功！！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
        }
        else
        {
            Log.SaveLog("样品接收中删除样品信息" + txt_SampleID.Text.Trim() + "（" + strSelectedId + "）失败！！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "", "alert('数据删除失败！')", true);
        }
        ReportSelectQuery();
   
    }
    //查询出选中的报告的样品列表
    private void ReportSelectQuery()
    {
        string strSql = "SELECT t_M_ReporInfo.ReportName AS 报告标识, t_M_SampleInfor.id," +
      "t_M_SampleInfor.AccessDate AS 接样时间, t_M_ReporInfo.ItemType," +
     " ItemName AS 项目类型, t_M_SampleInfor.SampleID AS 样品编号, " +
      " t_M_SampleInfor.TypeID, t_M_SampleType.SampleType AS 样品类型, " +
      " t_M_ReporInfo.ClientID, t_M_ClientInfo.ClientName AS 委托单位, " +
     " t_M_ReporInfo.urgent 备注, t_M_SampleInfor.ReportRemark AS 报告备注, " +
     " t_M_SampleInfor.StatusID, t_M_SampleInfor.ReportID" +
" FROM t_M_ReporInfo inner join t_M_SampleInfor on t_M_SampleInfor.ReportID = t_M_ReporInfo.id INNER JOIN" +
     " t_M_ItemInfo ON t_M_ReporInfo.ItemType = t_M_ItemInfo.ItemID INNER JOIN" +
     " t_M_SampleType ON " +
    "  t_M_SampleInfor.TypeID = t_M_SampleType.TypeID INNER JOIN" +
    
     " t_M_ClientInfo ON t_M_ReporInfo.ClientID = t_M_ClientInfo.id " +
  
" WHERE " +
     " t_M_SampleInfor.ReportID=" + strReportId +
" ORDER BY t_M_SampleInfor.id";
        DataSet ds = new MyDataOp(strSql).CreateDataSet();
        //DataColumn dc = new DataColumn("是否上传报告");
        //ds.Tables[0].Columns.Add(dc);
        //DataColumn dcc = new DataColumn("备注");
        //ds.Tables[0].Columns.Add(dcc);
        DataColumn dccc = new DataColumn("样品报告状态");
        ds.Tables[0].Columns.Add(dccc);
        foreach (DataRow dr in ds.Tables[0].Rows)
        {
            //if (dr["ReportAddress"].ToString() == "")
            //    dr["是否上传报告"] = "否";
            //else
            //    dr["是否上传报告"] = "是";
            //dr["备注"] = dr["urgent"].ToString();
            //if (dr["urgent"].ToString() == "0")
            //    dr["紧急程度"] = "一般";
            //else
            //    dr["紧急程度"] = "紧急";
            if (int.Parse(dr["StatusID"].ToString()) <= 1)
                dr["样品报告状态"] = "未完成";
            else
                dr["样品报告状态"] = "完成";



        }
        if (ds.Tables[0].Rows.Count == 0)
        {
            //没有记录仍保留表头
            ds.Tables[0].Rows.Add(ds.Tables[0].NewRow());
            grdvw_ReportDetail.DataSource = ds;
            grdvw_ReportDetail.DataBind();
            int intColumnCount = grdvw_ReportDetail.Rows[0].Cells.Count;
            grdvw_ReportDetail.Rows[0].Cells.Clear();
            grdvw_ReportDetail.Rows[0].Cells.Add(new TableCell());
            grdvw_ReportDetail.Rows[0].Cells[0].ColumnSpan = intColumnCount;
        }
        else
        {
            grdvw_ReportDetail.DataSource = ds;
            grdvw_ReportDetail.DataBind();

        }
        Query();
        //queryAnalysisItem();
        //ReportQuery();
    }
   #region 项目列表

   
    #endregion
    private int getnum(string str)
    {
        string[] sampleList = str.Split(',', '，');
        int sampleNum = 0;
       sampleNum = sampleList.Length;
        for (int k = 0; k < sampleList.Length; k++)
        {
            string[] range = sampleList[k].Split('~');
            if (range.Length == 2)
            {
                if (range[1].Trim() != "" && range[0].Trim() != "")
                {
                    try
                    {
                        sampleNum = sampleNum - 1;
                        if (range[1].Substring(0, range[1].Length - 3) == range[0].Substring(0, range[0].Length - 3))
                        {
                            int temp = int.Parse(range[1].Substring(range[1].Length - 3, 3)) - int.Parse(range[0].Substring(range[0].Length - 3, 3)) + 1;
                            if(temp<=0)
                                throw new Exception("编号有错");
                            else
                            sampleNum = sampleNum + temp;
                        }
                        else
                            throw new Exception("编号不统一");
                    }
                    catch (Exception msg)
                    {
                        sampleNum = 0;
                        break;
                    }
                }
            }
            else if (range.Length>2)
            {
                sampleNum = 0;
                break;
            }


        }
        return sampleNum;
    }
    protected void btn_OKSample_Click(object sender, EventArgs e)
    {
        string strFlag = VerifySample();//需要添加检查样品编号的有效性

        if (strFlag != "")
        {
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "alert('" + strFlag + "');", true);

            return;
        }
        else
        {
            int num = getnum(txt_SampleID.Text);
            if (num == 0)
            {
                ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "alert('样品编号不符合规定！');", true);
                return;

            }
            else
            {
                #region 添加新纪录
                if (Label2.Text == "添加样品")
                {
                    string strSqltmp = "";

                    DataSet myDR1 = new MyDataOp("select TypeID from t_M_SampleType where SampleType='" + DropList_SampleType.Text.Trim() + "'").CreateDataSet();
                    if (myDR1.Tables[0].Rows.Count > 0)
                    {

                        //DataSet myDR2 = new MyDataOp("select ItemID from t_M_ItemInfo where ItemName='" + DropList_ItemList.Text.Trim() + "'").CreateDataSet();
                        //if (myDR2.Tables[0].Rows.Count > 0)
                        //{
                        //string itemname = myDR2.Tables[0].Rows[0]["ItemID"].ToString();
                        string typename = myDR1.Tables[0].Rows[0]["TypeID"].ToString();

                        //string clientname = DropList_client.SelectedValue.ToString();
                        string ReportID = "";
                        //DataSet myDR3 = new MyDataOp("select id from t_M_ReporInfo where ReportName=  '" + txt_report.Text.Trim() + "' and (StatusID<2)").CreateDataSet();
                        //if (myDR3.Tables[0].Rows.Count > 0)
                        //{
                        ReportID = txt_report.SelectedValue.ToString();// myDR3.Tables[0].Rows[0]["id"].ToString();
                            strSqltmp = @"insert into t_M_SampleInfor
                    (AccessDate,TypeID,SampleID,UserID,CreateDate,ReportName,ReportID,StatusID)  
                    values('" + txt_SampleTime.Text.Trim()+ "','" + typename + "','" + txt_SampleID.Text.Trim() + "','" + Request.Cookies["Cookies"].Values["u_id"].ToString() + "',getdate(),'" + txt_report.Text.Trim() + "','" + ReportID + "',0)";


                            MyDataOp mdo = new MyDataOp(strSqltmp);
                            bool blSuccess = mdo.ExecuteCommand();
                            if (blSuccess == true)
                            {
                                Log.SaveLog("样品接收添加样品成功！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
                                ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "hiddenDetailAnalysisAdd();alert('数据添加成功！');", true);

                            }
                            else
                            {

                                Log.SaveLog("样品接收添加样品失败！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
                                ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "hiddenDetailAnalysisAdd();alert('数据添加失败！');", true);

                            }
                       
                    }
                    else
                    {
                        Log.SaveLog("样品接收添加样品不存在该样品名称！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
                        ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "hiddenDetailAnalysisAdd();alert('不存在该样品类型，请联系样品管理员！');", true);

                    }
                }
                #endregion

                #region 编辑记录
                if (Label2.Text == "编辑样品")
                {
                    DataSet myDR1 = new MyDataOp("select TypeID from t_M_SampleType where SampleType='" + DropList_SampleType.Text.Trim() + "'").CreateDataSet();
                    if (myDR1.Tables[0].Rows.Count > 0)
                    {

                            string typename = myDR1.Tables[0].Rows[0]["TypeID"].ToString();

                            string ReportID = "";
                            
                            ReportID = txt_report.SelectedValue.ToString();// myDR3.Tables[0].Rows[0]["id"].ToString();
                                string strSql = @"update t_M_SampleInfor set AccessDate='" + txt_SampleTime.Text.Trim() +
                                    "',SampleID='" + txt_SampleID.Text.Trim() +

                                                         "',TypeID='" + typename +
                                                         "',ReportName='" + txt_report.Text.Trim() + "',ReportID='" + ReportID + "'" +
                                                " where id='" + strSelectedId + "'";
                                string[] arr = new string[2];
                                arr.SetValue(strSql, 0);

                                strSql = "update t_M_MonitorItem set Num='" + num + "' where SampleID='" + strSelectedId + "'";
                                arr.SetValue(strSql, 1);
                                MyDataOp mdo = new MyDataOp(strSql);
                                bool blSuccess = mdo.DoTran(2, arr);
                                if (blSuccess == true)
                                {
                                    ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "hiddenDetailAnalysisAdd();alert('数据编辑成功！');", true);
                                    Log.SaveLog("样品接收编辑样品" + strSampleId + "（" + strSelectedId + "）成功！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
                                }
                                else
                                {
                                    ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "hiddenDetailAnalysisAdd();alert('数据编辑失败！');", true);
                                    Log.SaveLog("样品接收编辑样品" + strSampleId + "（" + strSelectedId + "）失败！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
                                }
                            //}
                            //else
                            //{
                            //    Log.SaveLog("样品接收不存在该报告名称！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);
                            //    ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "hiddenDetailAnalysisAdd();alert('不存在该报告标识，请先添加！！');", true);
                            //}

                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "hiddenDetailAnalysisAdd();alert('不存在该样品类型，请联系样品管理员！');", true);
                            Log.SaveLog("样品接收编辑样品" + strSampleId + "（" + strSelectedId + "）不存在该样品类型！", Request.Cookies["Cookies"].Values["u_id"].ToString(), 5);

                        }
                    }

                #endregion

                
            }
           
            } 
        ReportSelectQuery();
       
    }
    protected void btn_CancelSample_Click(object sender, EventArgs e)
    {
        ScriptManager.RegisterStartupScript(this.Page, this.GetType(), "click", "hiddenDetailAnalysisAdd();", true);
        ReportSelectQuery();
    }

    protected void btn_query_Click(object sender, EventArgs e)
    {
        //strSelectedId=txt_samplequery.Text;
       string strSample="";
        string strDate="";
        if(txt_samplequery.Text!="")
            strSample="and SampleID like'%" + txt_samplequery.Text + "%'";

        if (txt_QueryTime.Text!= "")
            strDate = " and (year(AccessDate)= '" + DateTime.Parse(txt_QueryTime.Text.Trim() + " 00:00:00").Year + "' AND month(AccessDate)= '" + DateTime.Parse(txt_QueryTime.Text.Trim() + " 00:00:00").Month + "' and day(AccessDate)= '" + DateTime.Parse(txt_QueryTime.Text.Trim() + " 00:00:00").Day + "')";
        string strSql = "select t_M_ReporInfo.id,CreateDate 时间,t_M_ReporInfo.ItemType,ItemName 项目类型,ReportName 报告标识,ClientID,ClientName 委托单位 from t_M_ReporInfo,t_M_ItemInfo,t_M_ClientInfo where t_M_ClientInfo.id=ClientID and t_M_ReporInfo.ItemType=t_M_ItemInfo.ItemID and (StatusID=0 or StatusID=1) " + strSample + strDate + " order by  t_M_ReporInfo.id ";

        DataSet ds = new MyDataOp(strSql).CreateDataSet();

        if (ds.Tables[0].Rows.Count == 0)
        {
            //没有记录仍保留表头
            ds.Tables[0].Rows.Add(ds.Tables[0].NewRow());
            grdvw_List.DataSource = ds;
            grdvw_List.DataBind();
            int intColumnCount = grdvw_List.Rows[0].Cells.Count;
            grdvw_List.Rows[0].Cells.Clear();
            grdvw_List.Rows[0].Cells.Add(new TableCell());
            grdvw_List.Rows[0].Cells[0].ColumnSpan = intColumnCount;
        }
        else
        {
            grdvw_List.DataSource = ds;
            grdvw_List.DataBind();
        } 
    }
  
}